package com.project.payment.controller;

import com.project.payment.entity.Payment;
import com.project.payment.service.PaymentService;
import com.stripe.Stripe;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestController
public class PaymentController {

    private final PaymentService paymentService;

    public PaymentController(PaymentService paymentService) {
        this.paymentService = paymentService;
    }

    @PostMapping("/{username}")
    public ResponseEntity<Map<String, Object>> pay(@PathVariable String username) {
        try {
            Map<String, Object> paymentDetails = paymentService.processPayment(username);
            return ResponseEntity.ok(paymentDetails);
        } catch (Exception e) {
            return ResponseEntity.badRequest().body(Map.of("error", e.getMessage()));
        }
    }

    @GetMapping("/get/{username}")
    public ResponseEntity<Map<String, Object>> getPaymentDetails(@PathVariable String username) {
        var payment = paymentService.getLatestPayment(username);
        if (payment == null) {
            return ResponseEntity.notFound().build();
        }

        Map<String, Object> response = Map.of(
                "paymentId", payment.getPaymentId(),
                "username", payment.getUsername(),
                "billId", payment.getBillId(),
                "amount", payment.getAmount(),
                "status", payment.getStatus()
        );

        return ResponseEntity.ok(response);
    }
    @PutMapping("/update-status/{paymentId}")
    public ResponseEntity<Payment> updateStatus(@PathVariable String paymentId) {
        try {
            Payment payment = paymentService.updatePaymentStatus(paymentId);
            return payment != null ? ResponseEntity.ok(payment) : ResponseEntity.notFound().build();
        } catch (Exception e) {
            return ResponseEntity.status(500).build();
        }
    }


}
